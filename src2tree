#!/usr/bin/env bash
# 
# parse a maven project directory tree so it can be examined for source
# structure and be pasted into a wiki with a bit of elbowgrease.
# This script is part of the (unofficial) ONOS documentation toolset.
#
# A wiki-formatted table is written to hier_out.
#
# wiki-indented hierarchy goes into hier_out.
# descriptions and package names go into pdescr_out and pname_out. 
#
# TODO: generate tables, also allow generation of HTML.

set -o pipefail
IFS=$'\n'

function usage() {
cat << EOF

usage: $0 -i [ONOS_ROOT] [options]

required:
   -i [ONOS_ROOT] : root directory of project to inspect
   
options:
   -l [level]     : how many directory levels to scrape (defualt 3)
   -n [filename]  : output results to [filename] (default hier_out)

EOF
}

#function cleanup() {
#  rm /tmp/h_tmp /tmp/p_tmp /tmp/p2_tmp
#}
                   
#trap cleanup EXIT

# argument parsing 
while getopts ":i:l:n:" opt; do
  case $opt in
    i)
      treedir=$(echo $OPTARG | sed -e 's:[/]$::')
      hier_out="hier_out"
      ;;
    l)
      level=$OPTARG
      ;;
    n)
      hier_out=$(echo ${OPTARG} | sed 's:[ /]::g')
      ;;
    \?)
      usage
      exit
      ;;
  esac
done

# sanity check
if [ -z $treedir ]; then
  printf "%s\n" "must specify a project directory" >&2
  usage >&2
  exit
fi

# set defaults if unset
: ${level:=3}

# go to right below the project location to get consistency
cwd=$(pwd)
rdir=$(printf ${treedir} | sed -e 's:^[./]*::' -e 's:[[:alpha:]-]*/::g')
cd ${treedir}; cd ..
find ${rdir} -maxdepth $((${level} - 1)) -type d -not -path '*/\.*' | grep -v src | grep -v target | sort -d > /tmp/h_tmp
echo `pwd`

while read l; do
  # project name
  project=$(printf ${l} | sed 's:[[:alpha:]-]*/::g')
  # indentation
  idt=$(printf ${l} | sed 's:[[:alpha:]-]*/\{0,1\}:*:g')
  printf "%s %s\n" "${idt}" ${project} >> "${cwd}/${hier_out}"

  if [ -e "${l}/pom.xml" ]; then
    # a project - parse its POM file
    pkn=$(grep -m2 '<artifactId>' "${l}/pom.xml" | tr $'\n' ' ')
    pkd=$(grep -m2 '</\{0,1\}description>' "${l}/pom.xml" | tr $'\n' ' ')
    printf "%s\n" "${pkn} ${pkd}"
    printf "%s\n" "${idt}${pkn} ${pkd}" | sed -n 's:\(**\).*<artifactId>\(.*\)</artifactId>.*:\1 \2:g p' >> /tmp/ht_name
    printf "%s\n" "${idt}${pkn} ${pkd}" | sed -n 's:\(**\).*<description>\(.*\)</description>.*:\1 \2: p' >> /tmp/ht_descr
  else
    # not a Maven project; fill fields with '-'
    printf "%s\n" "${idt} -" | tee -a /tmp/ht_name /tmp/ht_descr 1>/dev/null
  fi    
done < /tmp/h_tmp

cd ${cwd}
